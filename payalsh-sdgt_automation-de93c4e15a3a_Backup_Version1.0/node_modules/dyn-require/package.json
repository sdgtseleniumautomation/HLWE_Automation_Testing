{
  "_args": [
    [
      {
        "raw": "dyn-require",
        "scope": null,
        "escapedName": "dyn-require",
        "name": null,
        "rawSpec": "dyn-require",
        "spec": "/home/rhishikesht/emrAutomation/dyn-require",
        "type": "directory"
      },
      "/home/rhishikesht/emrAutomation"
    ]
  ],
  "_from": "dyn-require",
  "_id": "dyn-require@0.0.3",
  "_inCache": true,
  "_location": "/dyn-require",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dyn-require",
    "scope": null,
    "escapedName": "dyn-require",
    "name": null,
    "rawSpec": "dyn-require",
    "spec": "/home/rhishikesht/emrAutomation/dyn-require",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:dyn-require",
  "_shasum": "91551713e664d807bf34458d9861b26a66e933fb",
  "_shrinkwrap": null,
  "_spec": "dyn-require",
  "_where": "/home/rhishikesht/emrAutomation",
  "author": {
    "name": "Yaroslav Pogrebnyak",
    "email": "yyyaroslav@gmail.com",
    "url": "http://pogrebnyak.info"
  },
  "bugs": {
    "url": "https://github.com/yyyar/dyn-require/issues"
  },
  "dependencies": {
    "fs-extra": "^1.0.0",
    "lodash": "^4.16.6"
  },
  "description": "Dynamic loading Node.js modules from filesystem",
  "devDependencies": {
    "nodeunit": "^0.10.2"
  },
  "engines": {
    "node": ">= 4.0.0"
  },
  "gitHead": "fce5a450a3ff5b644a16c49e439f282427212c68",
  "homepage": "http://github.com/yyyar/dyn-require",
  "keywords": [
    "require",
    "modules",
    "dynamic",
    "scanner",
    "directory"
  ],
  "license": "MIT",
  "main": "./lib/index",
  "name": "dyn-require",
  "optionalDependencies": {},
  "readme": "### DynRequire\n\n[![Build Status](https://travis-ci.org/yyyar/dyn-require.svg?branch=master)](https://travis-ci.org/yyyar/dyn-require) [![NPM version](https://badge.fury.io/js/dyn-require.svg)](http://badge.fury.io/js/dyn-require)\n\nDynamic loading Node.js modules from filesystem.\n\n#### Intro\nSometimes you need to dynamically scan some directory, load all modules (js or json files) and perform some generic work with all of them.\nYou need to recoursively scan directories and filter non js files, that causes lots of boilerplate to be written. `DynRequire` solves\nthis problem for you. Just pass base path, and it will scan all modules and provides it to you as object (relative path) -> (module).\n`require`-like syntax also supported!\n\n#### Installation\n```bash\n$ npm install dyn-require\n```\n\n#### Usage\n\n##### Sync work\n```javascript\nvar DynRequire = require('dyn-require');\n\nvar modules = new DynRequre(__dirname + '/modules');\n\n/* get all modules as array */\nconsole.log( modules.requireAll() );\n\n/* get all modules as object (relative path) -> (module) */\nconsole.log( modules.requireAllEx() );\n\n/* require module */\nconsole.log( modules.require('modules/a') );\n```\n\n##### Async work\nIf using async method, DynRequire will emit two kind of messages: '`next'` on next module loaded and `'done'` when all modules are scanned and loaded.\n\n\n```javascript\nvar DynRequire = require('dyn-require');\n\nvar modules = new DynRequre(__dirname + '/modules', {\n    async: true\n});\n\n/* Next module */\nmodules.on('next', function(relPath, module) {\n    console.log(relPath, module);\n});\n\n/* All modules */\nmodules.on('done', function(allModules, allModulesWithPaths) {\n    console.log(allModules);\n\n    // Here you can use \n    // modules.require and modules.requireAll, etc...\n});\n```\n\n#### Author\n* [Yaroslav Pogrebnyak](https://github.com/yyyar/)\n\n#### License\nMIT\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/yyyar/dyn-require.git"
  },
  "scripts": {
    "test": "nodeunit tests --reporter verbose"
  },
  "version": "0.0.3"
}
